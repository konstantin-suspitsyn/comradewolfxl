<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAAAfCAMAAAAY0DVvAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAABgUExURU5OTsvLy5ycnH19fV1dXbOzs7u7u6ysrHR0dIyMjD4+PsLCwh8fH+Tk5NPT0y8vL21t
        baKiomRkZA8PD9ra2t/f3+Hh4c/Pz0ZGRlNTU5SUlOjo6DU1NYGBgQAAAOrq6g4rDLQAAAAZdEVYdFNv
        ZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAC40lEQVRYR8VW25LiIBDNFQOioMSdOGrz/3+5p4EE
        k8pWuVOVzHmIDXa6D30jhQ84NyIKuyMR8B0NbRL3xUjgponUIS32xEjAf1M30PNyTsvdMBF4GH063onc
        8yrbPm3ugImAb6n2/utqkAsiXabdzZEJ+MElr30pCn2M8ubIBE6ahiRiMTi5TzlkAjUif0kyuqJx9Hzt
        kIiJwNkh8/pPWgGnAziYbutUTATQANS2Mq0iHq3VpLu02gYjgRb+DY6dlhkveiXpc5ic2H8gaAg0XJ1U
        HwYE5sePOOnnI4mf40MCCiceIyDh392iPEPnflAEHxLQ/IiqN1QgXYOYUHYRnACJUFlsKVwXuDQrJwy5
        Cruu4pUk15cNDEDHexZcsIyilt4SOkkQFL22kwkmIKBILhG48mJ21AotwRge/sCW+77XClYxrCoypVfO
        9F5pVsS2r5seUcRlprTwPR9NQcmSEJzYmrAhSEwmYgQiT/Z2dIgA28l45aHEboCaz9I7C5c4j2TDElsV
        u41wNchyIcF8FLDDPrVyva91NrEk0B1AgKOUYe9JgF4TforAwyi45DyMjyBEwF1wweaTYH3t+oMTuGeU
        zSYWBB4PTEE378D7G4GQ21izvjCrBEINwEtNfJEGAgEWkZdNgddKRGoysYwArgFajBuVS3IWAdhYI6CR
        8T4QmCIwXum6QC1WhAxkE0sCFbh+sZChM4H3GuBwrBDgEAcCKfVcA2NKrXN4aoNjTCaWBDCFcs1FuByR
        ivBukUt4hYB3+E+hBuCoh0tYVUag6xCGA7+OhkCtvnUBhEyAx/D8c/Am3lMiUaJNmefACoEKQ0E2IMBK
        VrL5MBn4xJptCw5DngOIuc0EBowM/tufjxfZNUrzWJo3xXYAgRLunvb+DN9iAa65rI3lTQACoYMyTNf+
        //XzcxSYTMkzY5CLbtgc08gIgX/7INoLxSkGwHRcnL+A4htHH3b6Al5DMfxK4Ed4/xeOqa5RK8Gj3gAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>